library("grid", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.library(knitr)
install.packages(knitr)
install.packages("knitr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("gridExtra")
install.packages("reshape2")
install.packages(ggally)
install.packages("ggally")
install.packages("GGally")
library(ggplot2)
library(dplyr)
library(plyr)
library(GGally)
library(scales)
setwd("/Volumes//Marice-Dev/Workspace/ds_nd/p4-eda")
data = read.csv("dataset/prosperLoanData.csv")
drop_users_cols= subset(data,
!duplicated(data$MemberKey),#drop duplicated users
select=c('BorrowerRate',
'ProsperRating..numeric.',
'ListingCategory..numeric.',
'IsBorrowerHomeowner',
'StatedMonthlyIncome',
'Recommendations',
'ProsperPaymentsOneMonthPlusLate',
'LoanOriginalAmount',
'Term',
'Occupation',
'LoanStatus',
'CreditGrade',
'PercentFunded'))
df = rename(drop_users_cols, c('ProsperRating..numeric.' = 'Rating',
'BorrowerRate'= 'Rate',
'IsBorrowerHomeowner'='Homeowner',
'StatedMonthlyIncome'= 'Income',
'ProsperPaymentsOneMonthPlusLate'= 'PaymentsLate',
'LoanOriginalAmount'= 'Amount',
'ListingCategory..numeric.' = 'Category'))
df = subset(df,!is.na(Rating),
select = -c(LoanStatus,
CreditGrade,
PercentFunded))
ggplot(df,aes(x=Amount,y=Rating)) + geom_point(alpha = 0.01)
ggplot(df,aes(x=Amount,y=Rating)) + geom_boxplot(alpha=0.1)
ggplot(df,aes(y=Amount,x=Rating)) + geom_boxplot(alpha=0.1)
ggplot(df,aes(y=Amount,x=factor(Rating))) + geom_boxplot(alpha=0.1)
ggplot(df,aes(x=Amount,y=factor(Rating))) + geom_boxplot(alpha=0.1)
ggplot(df,aes(y=Amount,x=factor(Rating))) + geom_boxplot(alpha=0.1)
ggplot(df,aes(x=factor(Rating),y=factor(Recommendations))) +
geom_tile(fill="blue") +
theme_bw()
# scale_fill_gradient(low='white',high='blue')
cor.test(df$Recommendations,df$Rating)
ggplot(df,aes(y=Income,x=Rate)) +
geom_point(alpha=1/50) +
ylim(0,quantile(df$Income,0.999))
cor.test(df$Rate,df$Income)
ggplot(df,aes(y=Income,x=Rate)) +
geom_point(alpha=1/50) +
geom_line() +
ylim(0,quantile(df$Income,0.999))
cor.test(df$Rate,df$Income)
ggplot(df,aes(y=Income,x=Rate)) +
geom_point(alpha=1/50) +
stat_smooth() +
ylim(0,quantile(df$Income,0.999))
cor.test(df$Rate,df$Income)
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(1000,q95,1000))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(1000,q95,5000))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(1000,q95,2500))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(0,q95,2500))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(0,q95,2500))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(100,q95,2500))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(2500,q95,2500))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(1000,q95,2500))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
q95 = quantile(df$Income,0.95)
scaled_income = scale_x_log10(limits= c(quantile(df$Income,0.05),q95),
breaks = seq(2500,q95,2500))
ggplot(df, aes(x=Income)) +
geom_histogram(binwidth = 0.03)+
scaled_income
ggplot(df,aes(x=LoanStatus)) + geom_bar()
setwd("/Volumes//Marice-Dev/Workspace/ds_nd/p4-eda")
data = read.csv("dataset/prosperLoanData.csv")
drop_users_cols= subset(data,
!duplicated(data$MemberKey),#drop duplicated users
select=c('BorrowerRate',
'ProsperRating..numeric.',
'ListingCategory..numeric.',
'IsBorrowerHomeowner',
'StatedMonthlyIncome',
'Recommendations',
'ProsperPaymentsOneMonthPlusLate',
'LoanOriginalAmount',
'Term',
'Occupation',
'LoanStatus',
'CreditGrade',
'PercentFunded'))
df = rename(drop_users_cols, c('ProsperRating..numeric.' = 'Rating',
'BorrowerRate'= 'Rate',
'IsBorrowerHomeowner'='Homeowner',
'StatedMonthlyIncome'= 'Income',
'ProsperPaymentsOneMonthPlusLate'= 'PaymentsLate',
'LoanOriginalAmount'= 'Amount',
'ListingCategory..numeric.' = 'Category'))
ggplot(df,aes(x=LoanStatus)) + geom_bar()
summary(df$LoanStatus)
ggplot(df,aes(x=LoanStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle=90,hjust=1))
summary(df$PercentFunded)
ggplot(df,aes(x=PercentFunded)) + geom_density()
ggplot(df,aes(x=PaymentsLate,y=Rating)) + geom_point()
library(reshape2)
tab<-table(df$Rating,df$Recommendations)
tab.long<-melt(tab)
colnames(tab.long)<-c("Recommendations","Rating","Count")
ggplot(tab.long, aes(y=Recommendations, x=Rating,fill=log(Count))) +
geom_tile() +xlim(0,10)
ggplot(df,aes(x=factor(Rating),y=factor(Recommendations))) +
geom_tile(fill="blue") +
theme_bw()
# scale_fill_gradient(low='white',high='blue')
cor.test(df$Recommendations,df$Rating)
ggplot(df,aes(x=factor(Rating),y=factor(Recommendations))) +
geom_tile(fill=..count..) +
theme_bw()
# scale_fill_gradient(low='white',high='blue')
cor.test(df$Recommendations,df$Rating)
ggplot(df,aes(x=factor(Rating),y=factor(Recommendations))) +
geom_tile(fill=..count..) +
theme_bw()
# scale_fill_gradient(low='white',high='blue')
cor.test(df$Recommendations,df$Rating)
ggplot(df,aes(x=factor(Rating),y=factor(Recommendations))) +
geom_tile(fill=..count..) +
theme_bw()
# scale_fill_gradient(low='white',high='blue')
cor.test(df$Recommendations,df$Rating)
ggplot(df,aes(x=factor(Rating),y=factor(Recommendations))) +
geom_tile(fill=..count..) +
theme_bw()
tab
tab.long
ggplot(df,aes(x=PaymentsLate,y=Rating)) + geom_point()
